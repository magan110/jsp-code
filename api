// Controllers/DsrRetailerInOutController.cs
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore;

namespace YourApp.Controllers
{
    // ------------------------------------------------
    // 1) EF Core DbContext
    // ------------------------------------------------
    public class ApplicationDbContext : DbContext
    {
        public ApplicationDbContext(DbContextOptions<ApplicationDbContext> opts)
            : base(opts) { }

        /// <summary>
        /// Maps to your bkmAreaMast table.
        /// </summary>
        public DbSet<BkmAreaMast> BkmAreaMast { get; set; } = null!;
    }

    // ------------------------------------------------
    // 2) Entity model for bkmAreaMast
    // ------------------------------------------------
    public class BkmAreaMast
    {
        public string AreaCode { get; set; } = "";
        public string AreaDesc { get; set; } = "";
        public string IsActive { get; set; } = "";   // 'Y' or 'N'
        public string IsOnlyDp { get; set; } = "";   // 'Y' or 'N'
    }

    // ------------------------------------------------
    // 3) DTO returned by our endpoint
    // ------------------------------------------------
    public class AreaCodeDto
    {
        public string Code { get; set; } = "";
        public string Description { get; set; } = "";
    }

    // ------------------------------------------------
    // 4) The API controller itself
    // ------------------------------------------------
    [ApiController]
    [Route("api/[controller]")]
    public class DsrRetailerInOutController : ControllerBase
    {
        private readonly ApplicationDbContext _context;

        public DsrRetailerInOutController(ApplicationDbContext context)
        {
            _context = context;
        }

        /// <summary>
        /// GET  /api/DsrRetailerInOut/areaCodes
        /// Returns all active area codes (excluding “only DP” records).
        /// </summary>
        [HttpGet("areaCodes")]
        [ProducesResponseType(typeof(IEnumerable<AreaCodeDto>), 200)]
        public async Task<ActionResult<IEnumerable<AreaCodeDto>>> GetAreaCodes()
        {
            var codes = await _context.BkmAreaMast
                .Where(a => a.IsActive == "Y" && a.IsOnlyDp != "Y")
                .OrderBy(a => a.AreaDesc)
                .Select(a => new AreaCodeDto
                {
                    Code        = a.AreaCode,
                    Description = a.AreaDesc
                })
                .ToListAsync();

            return Ok(codes);
        }
    }
}


