File 1: DTOs/DsrActivityDto.cs
This will contain the main request/response DTO for a full DSR and its nested detail DTOs.
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;

namespace sparshWebService.DTOs
{
    // Main DTO for submitting or retrieving a full DSR
    public class DsrActivityFullDto
    {
        // Header Information - Key identifiers
        [Required]
        public string LoginIdM { get; set; } // User's Login ID
        
        public string? DocuNumb { get; set; } // Document Number (null for new, present for update/fetch)
        
        [Required]
        public string Proctype { get; set; } // "Add", "Update", "Delete" (relevant for submission)

        // Fields from Basic Details (DSRActv.jsp & DsrVisit.dart)
        [Required]
        public string DocuDate { get; set; } // Expected "yyyy-MM-dd"
        public string? DsrParam { get; set; } // e.g., "05" for Personal Visit
        public string? CusRtlFl { get; set; } // Customer/Retailer Flag (e.g., "R", "C")
        public string? CusRtlCd { get; set; } // Customer/Retailer Code
        public string? AreaCode { get; set; }
        public string? CusRtlNm { get; set; } // Customer/Retailer Name (often fetched)
        public string? CuRtType { get; set; } // e.g., "RR", "RD" (used in JSP)

        // Fields from Details section (DSRActv.jsp & DsrVisit.dart)
        public string? KycStatus { get; set; } // Typically fetched, "Y" or "N"
        public string? MarketName { get; set; } // dsrRem01 in JSP
        public string? DisplayContestParticipation { get; set; } // Yes/No/NA (dsrRem08 in JSP)
        public string? PendingIssueStatus { get; set; } // Yes/No (pendIsue -> dsrRem02 in JSP)
        public string? PendingIssueDetailType { get; set; } // Token/Scheme/Product/Other (pndIsuDt -> dsrRem03 in JSP)
        public string? PendingIssueSpecifyText { get; set; } // isuDetal -> dsrRem04 in JSP

        // Enrollment Slab (MT) - mrktData = '01'
        public decimal? EnrolWCSlab { get; set; }
        public decimal? EnrolWCPSlab { get; set; }
        public decimal? EnrolVAPSlab { get; set; }

        // BW Stocks Availability (MT) - mrktData = '02'
        public decimal? BwStockWC { get; set; }
        public decimal? BwStockWCP { get; set; }
        public decimal? BwStockVAP { get; set; }

        // Brands Selling - WC (Industry Volume)
        public List<string>? BrandsSellingWC { get; set; } // List like ["BW", "JK"] (dsrRem06 in JSP, comma-separated)
        public decimal? WcIndustryVolume { get; set; }

        // Brands Selling - WCP (Industry Volume)
        public List<string>? BrandsSellingWCP { get; set; } // List like ["BW", "Asian Paints"] (dsrRem07 in JSP)
        public decimal? WcpIndustryVolume { get; set; }

        // Last 3 Months Avg - BW (MT) (fetched, display-only in Flutter, might not be part of submission DTO if not editable)
        public decimal? Last3MonthsBwWC { get; set; }
        public decimal? Last3MonthsBwWCP { get; set; }
        public decimal? Last3MonthsBwVAP { get; set; }

        // Current Months - BW (MT) (fetched, display-only)
        public decimal? CurrentMonthBwWC { get; set; }
        public decimal? CurrentMonthBwWCP { get; set; }
        public decimal? CurrentMonthBwVAP { get; set; }
        
        // Last 3 Months Avg - Competitors (MT) - mrktData = '04'
        public List<DsrCompetitorAvgSaleDto>? CompetitorAvgSales { get; set; }

        // Last Billing Date info (typically fetched, display-only)
        public List<DsrLastBillingDto>? LastBillings { get; set; }

        // Order Booked - mrktData = '05'
        public List<DsrOrderItemDto>? OrderItems { get; set; }

        // Market WCP SKU (Highest Selling) - mrktData = '06'
        public List<DsrMarketWcpSkuDto>? MarketWcpSkus { get; set; }

        // Order Execution Date & Remarks
        public string? OrderExecDate { get; set; } // yyyy-MM-dd
        public string? OtherRemarks { get; set; } // dsrRem05 in JSP

        // Gift Distribution (assuming new mrktData or separate table)
        public List<DsrGiftItemDto>? GiftItems { get; set; }

        // Tile Adhesives
        public string? IsTileAdhesiveSeller { get; set; } // "Yes", "No"
        public decimal? TileAdhesiveStock { get; set; }

        // Location Data (captured by DsrRetailerInOut, might be part of header)
        public string? GeoLatit { get; set; }
        public string? GeoLongt { get; set; }
        public string? PurchaserLatit { get; set; } // latitute from JSP
        public string? PurchaserLongt { get; set; } // lgtitute from JSP
        public string? LocationCapturedAddress { get; set; } // FinlRslt from JSP
        public string? DistanceExceptionReason { get; set; } // cityName from JSP if distance check fails

        // For internal mapping to dsrRem01-08 if needed by existing DB procedures/triggers
        // These would be populated by the controller before saving to dptDSRActvt's generic DsrRemXX columns
        // Or, the controller directly uses the specific fields above to update DsrRemXX columns.
        // For simplicity, we'll assume the controller maps specific fields to DsrRemXX directly during save.
    }

    public class DsrCompetitorAvgSaleDto
    {
        public string BrandName { get; set; } // e.g., "JK", "Asian", "Other" (actnRemk in JSP)
        public decimal? WcQty { get; set; }   // prodQnty for WC
        public decimal? WcpQty { get; set; }  // projQnty for WCP
    }

    public class DsrLastBillingDto
    {
        public string ProductName { get; set; } // e.g., "White Cement"
        public string Date { get; set; } // "dd MMM yyyy"
        public decimal Quantity { get; set; }
    }

    public class DsrOrderItemDto
    {
        public string? RepoCatg { get; set; } // Product Category (e.g., "01" for Cement, "02" for Putty)
        public string? ProdCode { get; set; } // Product SKU (catgPack in JSP's dtl)
        public decimal? QuantityInBags { get; set; } // prodQnty in JSP's dtl
        public decimal? QuantityInMT { get; set; }   // projQnty in JSP's dtl
        // public string? ActionRemark { get; set; } // actnRemk from JSP if used differently for orders
        // public string? TargetDate { get; set; } // targetDt from JSP if used for orders
    }

    public class DsrMarketWcpSkuDto
    {
        public string BrandName { get; set; } // "BW", "JK", "AP", "BG", "Ot" (repoCatg in JSP dtl for this type)
        public string PrdCodMk { get; set; }  // Product Code (catgPack in JSP dtl)
        public decimal? BPriceVl { get; set; } // Price - B (prodQnty in JSP dtl)
        public decimal? CPriceVl { get; set; } // Price - C (projQnty in JSP dtl)
        // public string? RepoCtPk { get; set; } // repoCtPk hidden field in JSP, derived
    }

    public class DsrGiftItemDto
    {
        public string? GiftTypeCode { get; set; } // mrtlCode from JSP
        public int? Quantity { get; set; }       // isueQnty from JSP
    }

    // DTO for the response when fetching Area Codes (used by DsrRetailerInOut.dart)
    public class AreaCodeDto
    {
        public string AreaCode { get; set; }
        public string AreaDesc { get; set; }
    }

    // DTO for the response when fetching Retailers (used by DsrRetailerInOut.dart)
    public class RetailerInfoDto
    {
        public string Code { get; set; }
        public string Name { get; set; }
        public string? Address { get; set; }
        public string? City { get; set; }
        public double? Latitude { get; set; }
        public double? Longitude { get; set; }
        public string? KycStatus { get; set; } // Added for convenience
        public string? MobileNo { get; set; } // Added
        public string? MarketName { get; set; } // mrktName from rtmRetailer/dpmCustomer
    }

    // DTO for DSR Header only submission (from DsrRetailerInOut.dart)
    public class DsrHeaderSubmitDto
    {
        [Required] public string LoginIdM { get; set; }
        public string? DocuNumb { get; set; } // Allow client to send, or server generates if null/empty
        [Required] public string DocuDate { get; set; } // yyyy-MM-dd
        [Required] public string DsrParam { get; set; } // "05" or "EX"
        [Required] public string CusRtlFl { get; set; }
        [Required] public string CusRtlCd { get; set; }
        [Required] public string AreaCode { get; set; }
        
        // Optional fields that might come from DsrRetailerInOut if it expands
        public string? CuRtType { get; set; }
        public string? OrdExDat { get; set; } // Though unlikely for just check-in
        public string? DsrRem01 { get; set; } // and other DsrRemXX if needed for header-only
        // ...

        // Location related for check-in validation or exception logging
        public string? GeoLatit { get; set; }
        public string? GeoLongt { get; set; }
        public double? Distance { get; set; }
        public string? DistanceExceptionReason { get; set; } // cityName from JSP
    }
}
