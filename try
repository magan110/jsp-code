-- SQL Server schema and seed for database: bwlive
-- Creates all tables + inserts dummy data
-- Safe to run multiple times (checks existence before creating tables)

USE [bwlive];
GO

SET ANSI_NULLS ON;
SET QUOTED_IDENTIFIER ON;
GO

BEGIN TRY
  BEGIN TRAN;

  ------------------------------------------------------------
  -- USERS
  ------------------------------------------------------------
  IF OBJECT_ID('dbo.users', 'U') IS NULL
  BEGIN
    CREATE TABLE dbo.users (
      id              NVARCHAR(36)   NOT NULL PRIMARY KEY,
      email           NVARCHAR(255)  NOT NULL UNIQUE,
      name            NVARCHAR(255)  NULL,
      password        NVARCHAR(255)  NOT NULL,
      role            NVARCHAR(32)   NOT NULL,
      department      NVARCHAR(255)  NULL,
      phone           NVARCHAR(50)   NULL,
      isActive        BIT            NOT NULL CONSTRAINT DF_users_isActive DEFAULT(1),
      createdAt       DATETIME2(3)   NOT NULL CONSTRAINT DF_users_createdAt DEFAULT(SYSDATETIME()),
      updatedAt       DATETIME2(3)   NOT NULL CONSTRAINT DF_users_updatedAt DEFAULT(SYSDATETIME()),
      CONSTRAINT CK_users_role CHECK (role IN (N'REQUESTER',N'APPROVER',N'PROCUREMENT_TEAM',N'ADMIN',N'VENDOR'))
    );
  END;

  ------------------------------------------------------------
  -- VENDORS
  ------------------------------------------------------------
  IF OBJECT_ID('dbo.vendors', 'U') IS NULL
  BEGIN
    CREATE TABLE dbo.vendors (
      id              NVARCHAR(36)  NOT NULL PRIMARY KEY,
      name            NVARCHAR(255) NOT NULL,
      email           NVARCHAR(255) NOT NULL UNIQUE,
      phone           NVARCHAR(50)  NULL,
      address         NVARCHAR(500) NULL,
      contactPerson   NVARCHAR(255) NULL,
      taxId           NVARCHAR(100) NULL,
      status          NVARCHAR(32)  NOT NULL CONSTRAINT DF_vendors_status DEFAULT(N'PENDING'),
      category        NVARCHAR(255) NULL,
      rating          DECIMAL(3,2)  NULL,
      createdAt       DATETIME2(3)  NOT NULL CONSTRAINT DF_vendors_createdAt DEFAULT(SYSDATETIME()),
      updatedAt       DATETIME2(3)  NOT NULL CONSTRAINT DF_vendors_updatedAt DEFAULT(SYSDATETIME()),
      CONSTRAINT CK_vendors_status CHECK (status IN (N'PENDING',N'APPROVED',N'REJECTED',N'SUSPENDED'))
    );
  END;

  ------------------------------------------------------------
  -- PRODUCTS
  ------------------------------------------------------------
  IF OBJECT_ID('dbo.products', 'U') IS NULL
  BEGIN
    CREATE TABLE dbo.products (
      id              NVARCHAR(36)  NOT NULL PRIMARY KEY,
      name            NVARCHAR(255) NOT NULL,
      description     NVARCHAR(1000) NULL,
      category        NVARCHAR(255) NOT NULL,
      sku             NVARCHAR(100) NULL UNIQUE,
      unit            NVARCHAR(50)  NOT NULL,
      price           DECIMAL(18,2) NOT NULL,
      vendorId        NVARCHAR(36)  NOT NULL,
      isActive        BIT           NOT NULL CONSTRAINT DF_products_isActive DEFAULT(1),
      createdAt       DATETIME2(3)  NOT NULL CONSTRAINT DF_products_createdAt DEFAULT(SYSDATETIME()),
      updatedAt       DATETIME2(3)  NOT NULL CONSTRAINT DF_products_updatedAt DEFAULT(SYSDATETIME()),
      CONSTRAINT FK_products_vendor FOREIGN KEY (vendorId) REFERENCES dbo.vendors(id) ON UPDATE NO ACTION ON DELETE NO ACTION
    );
  END;

  ------------------------------------------------------------
  -- PURCHASE REQUISITIONS
  ------------------------------------------------------------
  IF OBJECT_ID('dbo.purchase_requisitions', 'U') IS NULL
  BEGIN
    CREATE TABLE dbo.purchase_requisitions (
      id              NVARCHAR(36)  NOT NULL PRIMARY KEY,
      prNumber        NVARCHAR(50)  NOT NULL UNIQUE,
      title           NVARCHAR(255) NOT NULL,
      description     NVARCHAR(1000) NULL,
      status          NVARCHAR(32)  NOT NULL CONSTRAINT DF_pr_status DEFAULT(N'DRAFT'),
      priority        NVARCHAR(16)  NOT NULL CONSTRAINT DF_pr_priority DEFAULT(N'MEDIUM'),
      budgetCode      NVARCHAR(100) NULL,
      totalAmount     DECIMAL(18,2) NOT NULL CONSTRAINT DF_pr_total DEFAULT(0),
      requesterId     NVARCHAR(36)  NOT NULL,
      createdAt       DATETIME2(3)  NOT NULL CONSTRAINT DF_pr_createdAt DEFAULT(SYSDATETIME()),
      updatedAt       DATETIME2(3)  NOT NULL CONSTRAINT DF_pr_updatedAt DEFAULT(SYSDATETIME()),
      CONSTRAINT CK_pr_status CHECK (status IN (N'DRAFT',N'SUBMITTED',N'UNDER_REVIEW',N'APPROVED',N'REJECTED',N'CANCELLED')),
      CONSTRAINT CK_pr_priority CHECK (priority IN (N'LOW',N'MEDIUM',N'HIGH',N'URGENT')),
      CONSTRAINT FK_pr_requester FOREIGN KEY (requesterId) REFERENCES dbo.users(id) ON UPDATE NO ACTION ON DELETE NO ACTION
    );
  END;

  ------------------------------------------------------------
  -- PURCHASE REQUISITION ITEMS
  ------------------------------------------------------------
  IF OBJECT_ID('dbo.purchase_requisition_items', 'U') IS NULL
  BEGIN
    CREATE TABLE dbo.purchase_requisition_items (
      id              NVARCHAR(36)  NOT NULL PRIMARY KEY,
      prId            NVARCHAR(36)  NOT NULL,
      productId       NVARCHAR(36)  NOT NULL,
      quantity        INT           NOT NULL,
      unitPrice       DECIMAL(18,2) NOT NULL,
      totalPrice      DECIMAL(18,2) NOT NULL,
      description     NVARCHAR(500) NULL,
      createdAt       DATETIME2(3)  NOT NULL CONSTRAINT DF_pri_createdAt DEFAULT(SYSDATETIME()),
      CONSTRAINT FK_pri_pr FOREIGN KEY (prId) REFERENCES dbo.purchase_requisitions(id) ON UPDATE NO ACTION ON DELETE NO ACTION,
      CONSTRAINT FK_pri_product FOREIGN KEY (productId) REFERENCES dbo.products(id) ON UPDATE NO ACTION ON DELETE NO ACTION
    );
  END;

  ------------------------------------------------------------
  -- APPROVALS
  ------------------------------------------------------------
  IF OBJECT_ID('dbo.approvals', 'U') IS NULL
  BEGIN
    CREATE TABLE dbo.approvals (
      id              NVARCHAR(36)  NOT NULL PRIMARY KEY,
      prId            NVARCHAR(36)  NOT NULL,
      approverId      NVARCHAR(36)  NOT NULL,
      status          NVARCHAR(32)  NOT NULL CONSTRAINT DF_approvals_status DEFAULT(N'PENDING'),
      comments        NVARCHAR(1000) NULL,
      level           INT           NOT NULL,
      createdAt       DATETIME2(3)  NOT NULL CONSTRAINT DF_approvals_createdAt DEFAULT(SYSDATETIME()),
      updatedAt       DATETIME2(3)  NOT NULL CONSTRAINT DF_approvals_updatedAt DEFAULT(SYSDATETIME()),
      CONSTRAINT CK_approvals_status CHECK (status IN (N'PENDING',N'APPROVED',N'REJECTED')),
      CONSTRAINT FK_approvals_pr FOREIGN KEY (prId) REFERENCES dbo.purchase_requisitions(id) ON UPDATE NO ACTION ON DELETE NO ACTION,
      CONSTRAINT FK_approvals_user FOREIGN KEY (approverId) REFERENCES dbo.users(id) ON UPDATE NO ACTION ON DELETE NO ACTION
    );
  END;

  ------------------------------------------------------------
  -- PURCHASE ORDERS
  ------------------------------------------------------------
  IF OBJECT_ID('dbo.purchase_orders', 'U') IS NULL
  BEGIN
    CREATE TABLE dbo.purchase_orders (
      id                      NVARCHAR(36)  NOT NULL PRIMARY KEY,
      poNumber                NVARCHAR(50)  NOT NULL UNIQUE,
      prId                    NVARCHAR(36)  NULL,
      vendorId                NVARCHAR(36)  NOT NULL,
      status                  NVARCHAR(32)  NOT NULL CONSTRAINT DF_po_status DEFAULT(N'DRAFT'),
      totalAmount             DECIMAL(18,2) NOT NULL CONSTRAINT DF_po_total DEFAULT(0),
      orderDate               DATETIME2(3)  NOT NULL CONSTRAINT DF_po_orderDate DEFAULT(SYSDATETIME()),
      expectedDeliveryDate    DATETIME2(3)  NULL,
      createdBy               NVARCHAR(36)  NOT NULL,
      createdAt               DATETIME2(3)  NOT NULL CONSTRAINT DF_po_createdAt DEFAULT(SYSDATETIME()),
      updatedAt               DATETIME2(3)  NOT NULL CONSTRAINT DF_po_updatedAt DEFAULT(SYSDATETIME()),
      CONSTRAINT CK_po_status CHECK (status IN (N'DRAFT',N'PENDING_APPROVAL',N'APPROVED',N'SENT_TO_VENDOR',N'PARTIALLY_DELIVERED',N'DELIVERED',N'CANCELLED')),
      CONSTRAINT FK_po_pr FOREIGN KEY (prId) REFERENCES dbo.purchase_requisitions(id) ON UPDATE NO ACTION ON DELETE NO ACTION,
      CONSTRAINT FK_po_vendor FOREIGN KEY (vendorId) REFERENCES dbo.vendors(id) ON UPDATE NO ACTION ON DELETE NO ACTION,
      CONSTRAINT FK_po_creator FOREIGN KEY (createdBy) REFERENCES dbo.users(id) ON UPDATE NO ACTION ON DELETE NO ACTION
    );
  END;

  ------------------------------------------------------------
  -- PURCHASE ORDER ITEMS
  ------------------------------------------------------------
  IF OBJECT_ID('dbo.purchase_order_items', 'U') IS NULL
  BEGIN
    CREATE TABLE dbo.purchase_order_items (
      id              NVARCHAR(36)  NOT NULL PRIMARY KEY,
      poId            NVARCHAR(36)  NOT NULL,
      productId       NVARCHAR(36)  NOT NULL,
      quantity        INT           NOT NULL,
      unitPrice       DECIMAL(18,2) NOT NULL,
      totalPrice      DECIMAL(18,2) NOT NULL,
      description     NVARCHAR(500) NULL,
      createdAt       DATETIME2(3)  NOT NULL CONSTRAINT DF_poi_createdAt DEFAULT(SYSDATETIME()),
      CONSTRAINT FK_poi_po FOREIGN KEY (poId) REFERENCES dbo.purchase_orders(id) ON UPDATE NO ACTION ON DELETE NO ACTION,
      CONSTRAINT FK_poi_product FOREIGN KEY (productId) REFERENCES dbo.products(id) ON UPDATE NO ACTION ON DELETE NO ACTION
    );
  END;

  ------------------------------------------------------------
  -- INVOICES
  ------------------------------------------------------------
  IF OBJECT_ID('dbo.invoices', 'U') IS NULL
  BEGIN
    CREATE TABLE dbo.invoices (
      id              NVARCHAR(36)  NOT NULL PRIMARY KEY,
      invoiceNumber   NVARCHAR(50)  NOT NULL UNIQUE,
      poId            NVARCHAR(36)  NOT NULL,
      vendorId        NVARCHAR(36)  NOT NULL,
      amount          DECIMAL(18,2) NOT NULL,
      status          NVARCHAR(32)  NOT NULL CONSTRAINT DF_invoice_status DEFAULT(N'PENDING'),
      invoiceDate     DATETIME2(3)  NOT NULL CONSTRAINT DF_invoice_date DEFAULT(SYSDATETIME()),
      dueDate         DATETIME2(3)  NULL,
      createdAt       DATETIME2(3)  NOT NULL CONSTRAINT DF_invoice_createdAt DEFAULT(SYSDATETIME()),
      updatedAt       DATETIME2(3)  NOT NULL CONSTRAINT DF_invoice_updatedAt DEFAULT(SYSDATETIME()),
      CONSTRAINT CK_invoice_status CHECK (status IN (N'PENDING',N'VERIFIED',N'APPROVED',N'PAID',N'PARTIALLY_PAID',N'OVERDUE',N'CANCELLED')),
      CONSTRAINT FK_invoice_po FOREIGN KEY (poId) REFERENCES dbo.purchase_orders(id) ON UPDATE NO ACTION ON DELETE NO ACTION,
      CONSTRAINT FK_invoice_vendor FOREIGN KEY (vendorId) REFERENCES dbo.vendors(id) ON UPDATE NO ACTION ON DELETE NO ACTION
    );
  END;

  ------------------------------------------------------------
  -- GOODS RECEIPT NOTES
  ------------------------------------------------------------
  IF OBJECT_ID('dbo.goods_receipt_notes', 'U') IS NULL
  BEGIN
    CREATE TABLE dbo.goods_receipt_notes (
      id              NVARCHAR(36)  NOT NULL PRIMARY KEY,
      grnNumber       NVARCHAR(50)  NOT NULL UNIQUE,
      poId            NVARCHAR(36)  NOT NULL,
      receivedBy      NVARCHAR(36)  NOT NULL,
      receivedDate    DATETIME2(3)  NOT NULL CONSTRAINT DF_grn_receivedDate DEFAULT(SYSDATETIME()),
      status          NVARCHAR(32)  NOT NULL CONSTRAINT DF_grn_status DEFAULT(N'DRAFT'),
      notes           NVARCHAR(1000) NULL,
      createdAt       DATETIME2(3)  NOT NULL CONSTRAINT DF_grn_createdAt DEFAULT(SYSDATETIME()),
      updatedAt       DATETIME2(3)  NOT NULL CONSTRAINT DF_grn_updatedAt DEFAULT(SYSDATETIME()),
      CONSTRAINT CK_grn_status CHECK (status IN (N'DRAFT',N'PARTIALLY_RECEIVED',N'FULLY_RECEIVED',N'QUALITY_CHECK_PENDING',N'QUALITY_CHECKED',N'ACCEPTED',N'REJECTED')),
      CONSTRAINT FK_grn_po FOREIGN KEY (poId) REFERENCES dbo.purchase_orders(id) ON UPDATE NO ACTION ON DELETE NO ACTION,
      CONSTRAINT FK_grn_user FOREIGN KEY (receivedBy) REFERENCES dbo.users(id) ON UPDATE NO ACTION ON DELETE NO ACTION
    );
  END;

  ------------------------------------------------------------
  -- GOODS RECEIPT NOTE ITEMS
  ------------------------------------------------------------
  IF OBJECT_ID('dbo.goods_receipt_note_items', 'U') IS NULL
  BEGIN
    CREATE TABLE dbo.goods_receipt_note_items (
      id                NVARCHAR(36)  NOT NULL PRIMARY KEY,
      grnId             NVARCHAR(36)  NOT NULL,
      productId         NVARCHAR(36)  NOT NULL,
      quantity          INT           NOT NULL,
      quantityAccepted  INT           NULL,
      quantityRejected  INT           NULL,
      qualityStatus     NVARCHAR(100) NULL,
      notes             NVARCHAR(500) NULL,
      createdAt         DATETIME2(3)  NOT NULL CONSTRAINT DF_grni_createdAt DEFAULT(SYSDATETIME()),
      CONSTRAINT FK_grni_grn FOREIGN KEY (grnId) REFERENCES dbo.goods_receipt_notes(id) ON UPDATE NO ACTION ON DELETE NO ACTION,
      CONSTRAINT FK_grni_product FOREIGN KEY (productId) REFERENCES dbo.products(id) ON UPDATE NO ACTION ON DELETE NO ACTION
    );
  END;

  ------------------------------------------------------------
  -- PAYMENTS
  ------------------------------------------------------------
  IF OBJECT_ID('dbo.payments', 'U') IS NULL
  BEGIN
    CREATE TABLE dbo.payments (
      id                NVARCHAR(36)  NOT NULL PRIMARY KEY,
      invoiceId         NVARCHAR(36)  NOT NULL,
      amount            DECIMAL(18,2) NOT NULL,
      paymentDate       DATETIME2(3)  NOT NULL CONSTRAINT DF_pay_paymentDate DEFAULT(SYSDATETIME()),
      status            NVARCHAR(32)  NOT NULL CONSTRAINT DF_pay_status DEFAULT(N'PENDING'),
      paymentMethod     NVARCHAR(100) NULL,
      referenceNumber   NVARCHAR(100) NULL,
      notes             NVARCHAR(1000) NULL,
      createdAt         DATETIME2(3)  NOT NULL CONSTRAINT DF_pay_createdAt DEFAULT(SYSDATETIME()),
      updatedAt         DATETIME2(3)  NOT NULL CONSTRAINT DF_pay_updatedAt DEFAULT(SYSDATETIME()),
      CONSTRAINT CK_pay_status CHECK (status IN (N'PENDING',N'PROCESSING',N'COMPLETED',N'FAILED',N'CANCELLED')),
      CONSTRAINT FK_pay_invoice FOREIGN KEY (invoiceId) REFERENCES dbo.invoices(id) ON UPDATE NO ACTION ON DELETE NO ACTION
    );
  END;

  ------------------------------------------------------------
  -- DOCUMENTS
  ------------------------------------------------------------
  IF OBJECT_ID('dbo.documents', 'U') IS NULL
  BEGIN
    CREATE TABLE dbo.documents (
      id            NVARCHAR(36)  NOT NULL PRIMARY KEY,
      name          NVARCHAR(255) NOT NULL,
      fileName      NVARCHAR(255) NOT NULL,
      filePath      NVARCHAR(500) NOT NULL,
      fileType      NVARCHAR(100) NOT NULL,
      fileSize      INT           NOT NULL,
      category      NVARCHAR(50)  NOT NULL,
      entityId      NVARCHAR(36)  NOT NULL,
      entityType    NVARCHAR(100) NOT NULL,
      uploadedBy    NVARCHAR(36)  NOT NULL,
      isPublic      BIT           NOT NULL CONSTRAINT DF_docs_public DEFAULT(0),
      createdAt     DATETIME2(3)  NOT NULL CONSTRAINT DF_docs_createdAt DEFAULT(SYSDATETIME()),
      updatedAt     DATETIME2(3)  NOT NULL CONSTRAINT DF_docs_updatedAt DEFAULT(SYSDATETIME()),
      CONSTRAINT CK_docs_category CHECK (category IN (N'CONTRACT',N'INVOICE',N'PURCHASE_ORDER',N'RECEIPT',N'CERTIFICATE',N'SPECIFICATION',N'OTHER')),
      CONSTRAINT FK_docs_user FOREIGN KEY (uploadedBy) REFERENCES dbo.users(id) ON UPDATE NO ACTION ON DELETE NO ACTION
    );
  END;

  ------------------------------------------------------------
  -- NOTIFICATIONS
  ------------------------------------------------------------
  IF OBJECT_ID('dbo.notifications', 'U') IS NULL
  BEGIN
    CREATE TABLE dbo.notifications (
      id            NVARCHAR(36)  NOT NULL PRIMARY KEY,
      title         NVARCHAR(255) NOT NULL,
      message       NVARCHAR(1000) NOT NULL,
      type          NVARCHAR(50)  NOT NULL,
      userId        NVARCHAR(36)  NOT NULL,
      isRead        BIT           NOT NULL CONSTRAINT DF_notifications_isRead DEFAULT(0),
      createdAt     DATETIME2(3)  NOT NULL CONSTRAINT DF_notifications_createdAt DEFAULT(SYSDATETIME()),
      CONSTRAINT CK_notif_type CHECK (type IN (N'INFO',N'WARNING',N'ERROR',N'SUCCESS',N'APPROVAL_PENDING',N'DOCUMENT_UPLOADED',N'PAYMENT_DUE',N'DELIVERY_DELAYED')),
      CONSTRAINT FK_notif_user FOREIGN KEY (userId) REFERENCES dbo.users(id) ON UPDATE NO ACTION ON DELETE NO ACTION
    );
  END;

  ------------------------------------------------------------
  -- AUDIT LOGS
  ------------------------------------------------------------
  IF OBJECT_ID('dbo.audit_logs', 'U') IS NULL
  BEGIN
    CREATE TABLE dbo.audit_logs (
      id            NVARCHAR(36)  NOT NULL PRIMARY KEY,
      action        NVARCHAR(255) NOT NULL,
      entityType    NVARCHAR(100) NOT NULL,
      entityId      NVARCHAR(36)  NOT NULL,
      userId        NVARCHAR(36)  NULL,
      oldValues     NVARCHAR(MAX) NULL,
      newValues     NVARCHAR(MAX) NULL,
      ipAddress     NVARCHAR(64)  NULL,
      userAgent     NVARCHAR(255) NULL,
      createdAt     DATETIME2(3)  NOT NULL CONSTRAINT DF_audit_createdAt DEFAULT(SYSDATETIME()),
      CONSTRAINT FK_audit_user FOREIGN KEY (userId) REFERENCES dbo.users(id) ON UPDATE NO ACTION ON DELETE NO ACTION
    );
  END;

  ------------------------------------------------------------
  -- SEED DATA (id values are fixed for FK references)
  ------------------------------------------------------------
  -- USERS
  IF NOT EXISTS (SELECT 1 FROM dbo.users WHERE id = 'u_admin')
  BEGIN
    INSERT INTO dbo.users (id,email,name,password,role,department,phone,isActive)
    VALUES
    ('u_admin','admin@company.com','Admin User','admin123','ADMIN','IT','+1-555-1000',1),
    ('u_approver','approver@company.com','Alice Approver','pass123','APPROVER','Finance','+1-555-2000',1),
    ('u_requester','requester@company.com','Ryan Requester','pass123','REQUESTER','Operations','+1-555-3000',1),
    ('u_proc','proc@company.com','Paula Procurement','pass123','PROCUREMENT_TEAM','Procurement','+1-555-4000',1);
  END;

  -- VENDORS
  IF NOT EXISTS (SELECT 1 FROM dbo.vendors WHERE id = 'v_acme')
  BEGIN
    INSERT INTO dbo.vendors (id,name,email,phone,address,contactPerson,taxId,status,category,rating)
    VALUES
    ('v_acme','ACME Supplies','sales@acme.com','+1-555-8100','123 Market St, Springfield','John Doe','TAX-ACME-001','APPROVED','Office',4.5),
    ('v_globex','Globex Corp','contact@globex.com','+1-555-8200','456 Industrial Rd, Shelbyville','Jane Smith','TAX-GBX-002','PENDING','Manufacturing',4.0);
  END;

  -- PRODUCTS
  IF NOT EXISTS (SELECT 1 FROM dbo.products WHERE id = 'p_paper')
  BEGIN
    INSERT INTO dbo.products (id,name,description,category,sku,unit,price,vendorId,isActive)
    VALUES
    ('p_paper','A4 Paper 80gsm','High quality printing paper','Stationery','SKU-A4-80','pack',5.50,'v_acme',1),
    ('p_ink','Printer Ink Black','Compatible with common printers','Supplies','SKU-INK-BLK','bottle',15.00,'v_acme',1),
    ('p_bolts','Steel Bolts M8','M8 x 20mm bolts','Hardware','SKU-BOLT-M8','box',12.25,'v_globex',1);
  END;

  -- PURCHASE REQUISITIONS
  IF NOT EXISTS (SELECT 1 FROM dbo.purchase_requisitions WHERE id = 'pr_1001')
  BEGIN
    INSERT INTO dbo.purchase_requisitions (id,prNumber,title,description,status,priority,budgetCode,totalAmount,requesterId)
    VALUES
    ('pr_1001','PR-1001','Office Paper Restock','Need paper for Q3','SUBMITTED','MEDIUM','BUD-IT-001',110.00,'u_requester'),
    ('pr_1002','PR-1002','Printer Consumables','Ink refills required','DRAFT','LOW','BUD-OPS-002',45.00,'u_requester');
  END;

  -- PR ITEMS
  IF NOT EXISTS (SELECT 1 FROM dbo.purchase_requisition_items WHERE id = 'pri_1')
  BEGIN
    INSERT INTO dbo.purchase_requisition_items (id,prId,productId,quantity,unitPrice,totalPrice,description)
    VALUES
    ('pri_1','pr_1001','p_paper',20,5.50,110.00,'Boxes of A4 paper'),
    ('pri_2','pr_1002','p_ink',3,15.00,45.00,'Black ink bottles');
  END;

  -- APPROVALS
  IF NOT EXISTS (SELECT 1 FROM dbo.approvals WHERE id = 'ap_1')
  BEGIN
    INSERT INTO dbo.approvals (id,prId,approverId,status,comments,level)
    VALUES
    ('ap_1','pr_1001','u_approver','PENDING','Awaiting review',1);
  END;

  -- PURCHASE ORDERS
  IF NOT EXISTS (SELECT 1 FROM dbo.purchase_orders WHERE id = 'po_2001')
  BEGIN
    INSERT INTO dbo.purchase_orders (id,poNumber,prId,vendorId,status,totalAmount,orderDate,expectedDeliveryDate,createdBy)
    VALUES
    ('po_2001','PO-2001','pr_1001','v_acme','APPROVED',110.00,SYSDATETIME(),DATEADD(day,7,SYSDATETIME()),'u_proc');
  END;

  -- PO ITEMS
  IF NOT EXISTS (SELECT 1 FROM dbo.purchase_order_items WHERE id = 'poi_1')
  BEGIN
    INSERT INTO dbo.purchase_order_items (id,poId,productId,quantity,unitPrice,totalPrice,description)
    VALUES
    ('poi_1','po_2001','p_paper',20,5.50,110.00,'A4 paper per PO');
  END;

  -- INVOICES
  IF NOT EXISTS (SELECT 1 FROM dbo.invoices WHERE id = 'inv_3001')
  BEGIN
    INSERT INTO dbo.invoices (id,invoiceNumber,poId,vendorId,amount,status,invoiceDate,dueDate)
    VALUES
    ('inv_3001','INV-3001','po_2001','v_acme',110.00,'PENDING',SYSDATETIME(),DATEADD(day,30,SYSDATETIME()));
  END;

  -- GRN
  IF NOT EXISTS (SELECT 1 FROM dbo.goods_receipt_notes WHERE id = 'grn_4001')
  BEGIN
    INSERT INTO dbo.goods_receipt_notes (id,grnNumber,poId,receivedBy,receivedDate,status,notes)
    VALUES
    ('grn_4001','GRN-4001','po_2001','u_proc',SYSDATETIME(),'FULLY_RECEIVED','All items received in good condition');
  END;

  -- GRN ITEMS
  IF NOT EXISTS (SELECT 1 FROM dbo.goods_receipt_note_items WHERE id = 'grni_1')
  BEGIN
    INSERT INTO dbo.goods_receipt_note_items (id,grnId,productId,quantity,quantityAccepted,quantityRejected,qualityStatus,notes)
    VALUES
    ('grni_1','grn_4001','p_paper',20,20,0,'ACCEPTED','No issues');
  END;

  -- PAYMENTS
  IF NOT EXISTS (SELECT 1 FROM dbo.payments WHERE id = 'pay_5001')
  BEGIN
    INSERT INTO dbo.payments (id,invoiceId,amount,status,paymentMethod,referenceNumber,notes)
    VALUES
    ('pay_5001','inv_3001',110.00,'PENDING','BANK_TRANSFER','REF-5001','Awaiting payment run');
  END;

  -- DOCUMENTS
  IF NOT EXISTS (SELECT 1 FROM dbo.documents WHERE id = 'doc_6001')
  BEGIN
    INSERT INTO dbo.documents (id,name,fileName,filePath,fileType,fileSize,category,entityId,entityType,uploadedBy,isPublic)
    VALUES
    ('doc_6001','PO Document','PO-2001.pdf','/files/po/PO-2001.pdf','application/pdf',123456,'PURCHASE_ORDER','po_2001','PurchaseOrder','u_admin',0);
  END;

  -- NOTIFICATIONS
  IF NOT EXISTS (SELECT 1 FROM dbo.notifications WHERE id = 'notif_7001')
  BEGIN
    INSERT INTO dbo.notifications (id,title,message,type,userId,isRead)
    VALUES
    ('notif_7001','Approval Pending','PR-1001 is awaiting your approval','APPROVAL_PENDING','u_approver',0);
  END;

  -- AUDIT LOGS
  IF NOT EXISTS (SELECT 1 FROM dbo.audit_logs WHERE id = 'al_8001')
  BEGIN
    INSERT INTO dbo.audit_logs (id,action,entityType,entityId,userId,oldValues,newValues,ipAddress,userAgent)
    VALUES
    ('al_8001','PR_CREATED','PurchaseRequisition','pr_1001','u_requester',NULL,'{"status":"SUBMITTED"}','127.0.0.1','seed-script');
  END;

  COMMIT;
END TRY
BEGIN CATCH
  IF @@TRANCOUNT > 0 ROLLBACK;
  DECLARE @ErrMsg NVARCHAR(4000) = ERROR_MESSAGE();
  RAISERROR(@ErrMsg, 16, 1);
END CATCH;
GO
