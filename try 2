import 'package:flutter/material.dart';
class PainterRow {
  String mobile;
  String type;
  String name;
  String pastData;

  PainterRow({
    this.mobile = '',
    this.type = '',
    this.name = '',
    this.pastData = '',
  });
}

class RetailerPlanScreen extends StatefulWidget {
  const RetailerPlanScreen({super.key});
  @override
  State<RetailerPlanScreen> createState() => _RetailerPlanScreenState();
}

class _RetailerPlanScreenState extends State<RetailerPlanScreen> with TickerProviderStateMixin {
  // Controllers for inputs
  final _planTypeController = TextEditingController(text: "Plan");
  final _areaController = TextEditingController(text: "Mumbai");
  final _purchaserTypeController = TextEditingController(text: "Retailer");
  final _retailerCodeController = TextEditingController(text: "RET12345");
  final _mobileNoController = TextEditingController(text: "9876543210");
  final _planDateController = TextEditingController(text: "2025-09-16");
final List<PainterRow> _painterRows = [
  PainterRow(mobile: '9001018762', type: 'Painter', name: 'Rahul Chavan', pastData: '---'),
  PainterRow(mobile: '9887123456', type: 'Contractor', name: 'Meena Builders', pastData: '...'),
];

  // Expansion state
  bool _retailerDetailsExpanded = true;

  @override
  void dispose() {
    _planTypeController.dispose();
    _areaController.dispose();
    _purchaserTypeController.dispose();
    _retailerCodeController.dispose();
    _mobileNoController.dispose();
    _planDateController.dispose();
    super.dispose();
  }

  // Section builder (see reference code)
  Widget _buildModernSection({
    required String title,
    required IconData icon,
    required List<Widget> children,
    bool isOptional = false,
    Widget? trailing,
    EdgeInsetsGeometry? margin,
    EdgeInsetsGeometry? padding,
  }) {
    return Container(
      margin: margin ?? const EdgeInsets.symmetric(vertical: 14),
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.circular(16),
        boxShadow: [
          BoxShadow(
            color: Colors.black.withOpacity(0.045),
            blurRadius: 18,
            offset: const Offset(0, 6),
          ),
        ],
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          // Section Header
          Container(
            padding: padding ?? const EdgeInsets.all(24),
            decoration: BoxDecoration(
              color: const Color(0xFFF8FAFC),
              borderRadius: const BorderRadius.vertical(top: Radius.circular(16)),
            ),
            child: Row(
              children: [
                Container(
                  width: 48,
                  height: 48,
                  decoration: BoxDecoration(
                    color: const Color(0xFF1E3A8A).withOpacity(0.10),
                    shape: BoxShape.circle,
                  ),
                  child: Icon(icon, color: const Color(0xFF1E3A8A)),
                ),
                const SizedBox(width: 18),
                Expanded(
                  child: Text(title,
                    style: const TextStyle(
                        fontSize: 19,
                        fontWeight: FontWeight.bold,
                        color: Color(0xFF223055),
                    ),
                  ),
                ),
                if (isOptional)
                  Text(
                    "Optional",
                    style: TextStyle(fontSize: 14, color: Colors.grey[500]),
                  ),
                if (trailing != null)
                  Padding(padding: const EdgeInsets.only(left: 12), child: trailing),
              ],
            ),
          ),
          // Content
          Padding(
            padding: const EdgeInsets.all(24),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: children,
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildDropdownField({required String label, required List<String> options, String? value, void Function(String?)? onChanged}) {
    return DropdownButtonFormField<String>(
      value: value,
      decoration: InputDecoration(
        labelText: label,
        border: OutlineInputBorder(borderRadius: BorderRadius.circular(12)),
        contentPadding: const EdgeInsets.symmetric(horizontal: 14, vertical: 14),
        filled: true,
        fillColor: const Color(0xFFF8FAFC),
      ),
      items: options.map((e) => DropdownMenuItem(value: e, child: Text(e))).toList(),
      isExpanded: true,
      onChanged: onChanged,
    );
  }

  Widget _buildTextField({required TextEditingController controller, required String label, IconData? icon, bool enabled = true}) {
    return TextFormField(
      controller: controller,
      enabled: enabled,
      decoration: InputDecoration(
        labelText: label,
        filled: true,
        fillColor: const Color(0xFFF8FAFC),
        border: OutlineInputBorder(borderRadius: BorderRadius.circular(12)),
        prefixIcon: icon != null ? Icon(icon, color: Colors.grey[600]) : null,
        contentPadding: const EdgeInsets.symmetric(horizontal: 14, vertical: 14),
      ),
    );
  }

  Widget _buildTopFieldsSection() {
    return _buildModernSection(
      title: 'Plan Information',
      icon: Icons.assignment,
      children: [
        Wrap(
          spacing: 24,
          runSpacing: 18,
          children: [
            SizedBox(
                width: 212,
                child: _buildDropdownField(
                    label: "Plan / Actual *",
                    options: ["Plan", "Actual"],
                    value: _planTypeController.text,
                    onChanged: (v) => setState(() => _planTypeController.text = v!))),
            SizedBox(
                width: 212,
                child: _buildDropdownField(
                    label: "Area *",
                    options: ["Mumbai", "Pune", "Delhi"],
                    value: _areaController.text,
                    onChanged: (v) => setState(() => _areaController.text = v!))),
            SizedBox(
                width: 230,
                child: _buildDropdownField(
                    label: "Purchaser Type*",
                    options: ["Retailer", "Distributor"],
                    value: _purchaserTypeController.text,
                    onChanged: (v) => setState(() => _purchaserTypeController.text = v!))),
            SizedBox(width: 212, child: _buildTextField(controller: _retailerCodeController, label: "Retailer Code", icon: Icons.qr_code)),
            SizedBox(width: 212, child: _buildTextField(controller: _mobileNoController, label: "Mobile No*", icon: Icons.phone)),
            SizedBox(width: 212, child: _buildTextField(controller: _planDateController, label: "Plan Date *", icon: Icons.calendar_today, enabled: false)),
          ],
        ),
      ],
      margin: const EdgeInsets.only(bottom: 14),
    );
  }

  Widget _buildRetailerDetailsSection() {
    return _buildModernSection(
      title: "Retailer Details",
      icon: Icons.store,
      trailing: IconButton(
        icon: Icon(_retailerDetailsExpanded ? Icons.expand_less : Icons.expand_more, color: const Color(0xFF1E3A8A)),
        onPressed: () => setState(() => _retailerDetailsExpanded = !_retailerDetailsExpanded),
      ),
      children: [
        AnimatedCrossFade(
          firstChild: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Table(
                columnWidths: const {
                  0: FlexColumnWidth(2.5),
                  1: FlexColumnWidth(2.5),
                  2: FlexColumnWidth(2.5),
                  3: FlexColumnWidth(2.5),
                },
                children: [
                  TableRow(children: [
                    _retailerDetailCell('Name *', 'Amit Traders'),
                    _retailerDetailCell('SAP Code *', 'SAP9081'),
                    _retailerDetailCell('Mobile No *', '+91 9812345678'),
                    _retailerDetailCell('Stockist Name*', 'Mahesh Stockist'),
                  ]),
                  TableRow(children: [
                    _retailerDetailCell('District*', 'Mumbai'),
                    _retailerDetailCell('City*', 'Mumbai'),
                    _retailerDetailCell('Pin Code*', '400001'),
                    _retailerDetailCell('KYC Status*', 'Verified'),
                  ]),
                ],
              ),
              const SizedBox(height: 24),
              const Text("Retailer Sale As on Dates Average (MT)", style: TextStyle(fontWeight: FontWeight.w600)),
              const SizedBox(height: 7),
              Table(
                columnWidths: const {0: FlexColumnWidth(2), 1: FlexColumnWidth(2), 2: FlexColumnWidth(2)},
                children: [
                  const TableRow(
                    decoration: BoxDecoration(color: Color(0xFFF1F5F9)),
                    children: [
                      Padding(padding: EdgeInsets.symmetric(vertical: 5), child: Text("Seepgaurd", textAlign: TextAlign.center)),
                      Padding(padding: EdgeInsets.symmetric(vertical: 5), child: Text("Distemper", textAlign: TextAlign.center)),
                      Padding(padding: EdgeInsets.symmetric(vertical: 5), child: Text("Primacoat", textAlign: TextAlign.center)),
                    ],
                  ),
                  const TableRow(children: [
                    Padding(padding: EdgeInsets.symmetric(vertical: 6), child: Text('1.250', textAlign: TextAlign.center)),
                    Padding(padding: EdgeInsets.symmetric(vertical: 6), child: Text('0.508', textAlign: TextAlign.center)),
                    Padding(padding: EdgeInsets.symmetric(vertical: 6), child: Text('0.850', textAlign: TextAlign.center)),
                  ]),
                ],
              )
            ],
          ),
          secondChild: const SizedBox.shrink(),
          crossFadeState: _retailerDetailsExpanded ? CrossFadeState.showFirst : CrossFadeState.showSecond,
          duration: const Duration(milliseconds: 220),
        ),
      ],
      margin: EdgeInsets.zero,
    );
  }

  Widget _retailerDetailCell(String label, String value) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 5, horizontal: 2),
      child: RichText(
        text: TextSpan(
          text: "$label\n",
          style: const TextStyle(fontSize: 13, color: Colors.black54, fontWeight: FontWeight.bold),
          children: [
            TextSpan(text: value, style: const TextStyle(fontSize: 15, color: Colors.black87, fontWeight: FontWeight.w400)),
          ],
        ),
      ),
    );
  }

  Widget _buildPaintersSection() {
  return _buildModernSection(
    title: 'List of Painters/Contractors',
    icon: Icons.people_alt_outlined,
    children: [
      SingleChildScrollView(
        scrollDirection: Axis.horizontal,
        child: Table(
          defaultVerticalAlignment: TableCellVerticalAlignment.middle,
          columnWidths: const {
            0: FixedColumnWidth(60),
            1: FixedColumnWidth(150),
            2: FixedColumnWidth(120),
            3: FixedColumnWidth(150),
            4: FixedColumnWidth(110),
            5: FixedColumnWidth(45),
          },
          border: TableBorder(horizontalInside: BorderSide(color: Colors.grey.shade200)),
          children: [
            TableRow(
              decoration: const BoxDecoration(color: Color(0xFFE3F2FD)),
              children: const [
                Padding(padding: EdgeInsets.all(8), child: Text('Sr No', style: TextStyle(fontWeight: FontWeight.bold))),
                Padding(padding: EdgeInsets.all(8), child: Text('Mobile No', style: TextStyle(fontWeight: FontWeight.bold))),
                Padding(padding: EdgeInsets.all(8), child: Text('Type', style: TextStyle(fontWeight: FontWeight.bold))),
                Padding(padding: EdgeInsets.all(8), child: Text('Name', style: TextStyle(fontWeight: FontWeight.bold))),
                Padding(padding: EdgeInsets.all(8), child: Text('Past Data', style: TextStyle(fontWeight: FontWeight.bold))),
                SizedBox(),
              ],
            ),
            ..._painterRows.asMap().entries.map((entry) {
              int idx = entry.key;
              PainterRow row = entry.value;
              return TableRow(
                children: [
                  Padding(
                    padding: const EdgeInsets.all(6),
                    child: Text('${idx + 1}'),
                  ),
                  Padding(
                    padding: const EdgeInsets.all(4),
                    child: TextFormField(
                      initialValue: row.mobile,
                      onChanged: (val) => row.mobile = val,
                      decoration: const InputDecoration(border: InputBorder.none, hintText: 'Enter'),
                    ),
                  ),
                  Padding(
                    padding: const EdgeInsets.all(4),
                    child: DropdownButtonFormField<String>(
                      value: row.type.isNotEmpty ? row.type : null,
                      items: const [
                        DropdownMenuItem(value: 'Painter', child: Text('Painter')),
                        DropdownMenuItem(value: 'Contractor', child: Text('Contractor')),
                      ],
                      onChanged: (val) => setState(() => row.type = val ?? ''),
                      decoration: const InputDecoration(border: InputBorder.none, hintText: 'Select'),
                    ),
                  ),
                  Padding(
                    padding: const EdgeInsets.all(4),
                    child: TextFormField(
                      initialValue: row.name,
                      onChanged: (val) => row.name = val,
                      decoration: const InputDecoration(border: InputBorder.none, hintText: 'Enter'),
                    ),
                  ),
                  Padding(
                    padding: const EdgeInsets.all(4),
                    child: TextFormField(
                      initialValue: row.pastData,
                      onChanged: (val) => row.pastData = val,
                      decoration: const InputDecoration(border: InputBorder.none, hintText: '...'),
                    ),
                  ),
                  IconButton(
                    icon: const Icon(Icons.delete_outline, color: Colors.redAccent, size: 22),
                    onPressed: () {
                      setState(() => _painterRows.removeAt(idx));
                    },
                  ),
                ],
              );
            }),
          ],
        ),
      ),
      const SizedBox(height: 14),
      Row(
        children: [
          ElevatedButton.icon(
            icon: const Icon(Icons.add, size: 18),
            label: const Text("Add"),
            style: ElevatedButton.styleFrom(
              backgroundColor: const Color(0xFF1E3A8A),
              foregroundColor: Colors.white,
              elevation: 0,
              shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(8)),
            ),
            onPressed: () => setState(() => _painterRows.add(PainterRow())),
          ),
          const SizedBox(width: 14),
          Text('Add a new painter/contractor', style: TextStyle(color: Colors.grey[600], fontSize: 13)),
        ],
      ),
    ],
  );
}


  Widget _buildSubmitButton() {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 25),
      child: SizedBox(
        width: 190,
        height: 45,
        child: ElevatedButton(
          style: ElevatedButton.styleFrom(
              backgroundColor: const Color(0xFF1E3A8A),
              foregroundColor: Colors.white,
              elevation: 0,
              shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(10))),
          onPressed: () {},
          child: const Text('Plan Submit', style: TextStyle(fontSize: 15, fontWeight: FontWeight.bold, color: Colors.white)),
        ),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: const Color(0xFFE3ECFE),
      appBar: AppBar(
        elevation: 0,
        backgroundColor: Colors.transparent,
        foregroundColor: const Color(0xFF1E3A8A),
        title: const Text("Retailer Plan", style: TextStyle(fontWeight: FontWeight.w600, fontSize: 20, color: Color(0xFF1E3A8A))),
        actions: [
          IconButton(
            icon: const Icon(Icons.help_outline_rounded, color: Color(0xFF1E3A8A)),
            onPressed: () {
              showDialog(
                context: context,
                builder: (context) => Dialog(
                  shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(16)),
                  child: Container(
                    padding: const EdgeInsets.all(28),
                    child: Column(
                      mainAxisSize: MainAxisSize.min,
                      children: [
                        const Icon(Icons.help_outline_rounded, size: 46, color: Color(0xFF1E3A8A)),
                        const SizedBox(height: 15),
                        const Text("Help", style: TextStyle(fontWeight: FontWeight.bold, fontSize: 19, color: Color(0xFF1E3A8A))),
                        const SizedBox(height: 14),
                        Text("Fill in all mandatory fields marked with * for plan submission.\nExpand Retailer Details for more summary.", textAlign: TextAlign.center, style: TextStyle(color: Colors.grey[700])),
                        const SizedBox(height: 31),
                        SizedBox(
                          width: double.infinity,
                          child: ElevatedButton(
                            style: ElevatedButton.styleFrom(
                              backgroundColor: const Color(0xFF1E3A8A),
                              foregroundColor: Colors.white,
                            ),
                            onPressed: () => Navigator.pop(context),
                            child: const Text('Got it', style: TextStyle(color: Colors.white)),
                          ),
                        ),
                      ],
                    ),
                  ),
                ),
              );
            },
          )
        ],
      ),
      body: Center(
        child: ConstrainedBox(
          constraints: const BoxConstraints(maxWidth: 1100),
          child: SingleChildScrollView(
            padding: const EdgeInsets.symmetric(horizontal: 18, vertical: 16),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.stretch,
              children: [
                _buildTopFieldsSection(),
                _buildRetailerDetailsSection(),
                _buildPaintersSection(),
                _buildSubmitButton(),
                const Padding(
                  padding: EdgeInsets.only(top: 9, right: 7),
                  child: Text('* indicates mandatory fields', style: TextStyle(color: Colors.redAccent), textAlign: TextAlign.right),
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }
}
