using Microsoft.AspNetCore.Mvc;
using sparshWebService.DataAccess;
using System;
using System.Collections.Generic;

namespace sparshWebService.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class GrcLeadEntryController : ControllerBase
    {
        private readonly DatabaseHelper _dbHelper;

        public GrcLeadEntryController(DatabaseHelper dbHelper)
        {
            _dbHelper = dbHelper;
        }

        [HttpPost("submitLead")]
        public IActionResult SubmitLead([FromBody] GrcLeadEntryRequest request)
        {
            if (request == null || string.IsNullOrWhiteSpace(request.MobileNo) || string.IsNullOrWhiteSpace(request.SiteName))
            {
                return BadRequest("Mobile Number and Site Name are required.");
            }

            try
            {
                const string sql = @"
INSERT INTO dptGrcLeadGn (
    docuNumb, leadDate, leadQnty, siteName, mobileNo, siteAddr, siteRmrk, adhrNumb, archtNam, itxPanNo, gstnNumb, emailAdd, district, areaCode, sitePinC
) VALUES (
    @DocuNumb, @LeadDate, @LeadQnty, @SiteName, @MobileNo, @SiteAddr, @SiteRmrk, @AdhrNumb, @ArchtNam, @ItxPanNo, @GstnNumb, @EmailAdd, @District, @AreaCode, @SitePinC
);";

                var parameters = new Dictionary<string, object>
                {
                    { "@DocuNumb", request.DocuNumb },
                    { "@LeadDate", request.LeadDate },
                    { "@LeadQnty", request.LeadQnty },
                    { "@SiteName", request.SiteName },
                    { "@MobileNo", request.MobileNo },
                    { "@SiteAddr", request.SiteAddr },
                    { "@SiteRmrk", request.SiteRmrk },
                    { "@AdhrNumb", request.AdhrNumb },
                    { "@ArchtNam", request.ArchtNam },
                    { "@ItxPanNo", request.ItxPanNo },
                    { "@GstnNumb", request.GstnNumb },
                    { "@EmailAdd", request.EmailAdd },
                    { "@District", request.District },
                    { "@AreaCode", request.AreaCode },
                    { "@SitePinC", request.SitePinC }
                };

                _dbHelper.ExecuteCommandPublic(_dbHelper.BwliveConnectionString, sql, parameters);

                return Ok("Lead submitted successfully.");
            }
            catch (Exception ex)
            {
                return StatusCode(500, $"Internal server error: {ex.Message}");
            }
        }

        [HttpGet("getLeadDetails")]
        public IActionResult GetLeadDetails([FromQuery] string docuNumb)
        {
            if (string.IsNullOrWhiteSpace(docuNumb))
            {
                return BadRequest("Document Number is required.");
            }

            try
            {
                const string sql = @"
SELECT docuNumb, leadDate, leadQnty, siteName, mobileNo, siteAddr, siteRmrk, adhrNumb, archtNam, itxPanNo, gstnNumb, emailAdd, district, areaCode, sitePinC
FROM dptGrcLeadGn
WHERE docuNumb = @DocuNumb;";

                var parameters = new Dictionary<string, object>
                {
                    { "@DocuNumb", docuNumb }
                };

                var result = _dbHelper.ExecuteSelectQueryPublic(_dbHelper.BwliveConnectionString, sql, parameters);

                if (result is List<Dictionary<string, object>> rows && rows.Count > 0)
                {
                    return Ok(rows);
                }

                return NotFound("Lead details not found.");
            }
            catch (Exception ex)
            {
                return StatusCode(500, $"Internal server error: {ex.Message}");
            }
        }
    }

    public class GrcLeadEntryRequest
    {
        public string DocuNumb { get; set; }
        public string LeadDate { get; set; }
        public string LeadQnty { get; set; }
        public string SiteName { get; set; }
        public string MobileNo { get; set; }
        public string SiteAddr { get; set; }
        public string SiteRmrk { get; set; }
        public string AdhrNumb { get; set; }
        public string ArchtNam { get; set; }
        public string ItxPanNo { get; set; }
        public string GstnNumb { get; set; }
        public string EmailAdd { get; set; }
        public string District { get; set; }
        public string AreaCode { get; set; }
        public string SitePinC { get; set; }
    }
}
